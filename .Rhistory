Kinematics_RS4 <-  rownames_to_column(Kinematics_RS4)
Kinematics_RS4 <-  cbind(Trial = "RS4", Kinematics_RS4)
Kinematics_Left_mean <- column_to_rownames(Kinematics_Left_mean, "Time")
Kinematics_Left_mean <-  data.frame(t(Kinematics_Left_mean))
Kinematics_Left_mean <-  rownames_to_column(Kinematics_Left_mean)
Kinematics_Left_mean <-  cbind(Trial = "LSmean", Kinematics_Left_mean)
Kinematics_Right_mean <- column_to_rownames(Kinematics_Right_mean, "Time")
Kinematics_Right_mean <-  data.frame(t(Kinematics_Right_mean))
Kinematics_Right_mean <-  rownames_to_column(Kinematics_Right_mean)
Kinematics_Right_mean <-  cbind(Trial = "RSmean", Kinematics_Right_mean)
Kinematics_Diff <- column_to_rownames(Kinematics_Diff, "Time")
Kinematics_Diff <-  data.frame(t(Kinematics_Diff))
Kinematics_Diff <-  rownames_to_column(Kinematics_Diff)
Kinematics_Diff <-  cbind(Trial = "Diff", Kinematics_Diff)
Kinematics_All <- bind_rows(Kinematics_LS1, Kinematics_RS1, Kinematics_LS2, Kinematics_RS2, Kinematics_LS3, Kinematics_RS3,
Kinematics_LS4, Kinematics_RS4, Kinematics_Left_mean, Kinematics_Right_mean, Kinematics_Diff)
Kinematics_All <-  data.frame(dataname1, labels1,Kinematics_All)
### PADDLE ###
Paddle <-  data.frame(t(Paddle))
Paddle <-  rownames_to_column(Paddle)
Paddle_All <- data.frame(dataname1, labels1,Paddle)
#TIME MARKERS ###
TimeMarkers_All <- data.frame(dataname1, labels1,TimeMarkers)
CombinedKinematics_All[[i]] = Kinematics_All
CombinedPaddle_All[[i]] = Paddle_All
CombinedTimeMarkers_All[[i]] = TimeMarkers_All
}
#### Process TS data ####
for  (i in 1:length(filePaths)){
#for  (i in 1:length(filePaths)){
labels1 <-  labels[i,]
dataname1 <- dataname[i,]
#Trial <- read.csv(input$Files$datapath[[i]], sheet = "DataDump", col_types = "numeric")
Trial <- fread(filePaths[[i]])
# Trial <- fread(filePaths[[i]])
Paddle <- Trial[,2:7]
Kinematics <-  Trial[1:101,c(1,8:383)]
names(Kinematics)<-str_replace_all(names(Kinematics), c(" " = "_"))
Discrete <-  Trial[1:8,384:428]
TimeMarkers <- Trial[1,429:433]
LeftKneeStatic <-  as.numeric(Trial[1,434])
RightKneeStatic <-  as.numeric(Trial[1,435])
Kinematics[,2] <- Kinematics[,2] - LeftKneeStatic
Kinematics[,48] <- Kinematics[,48] - RightKneeStatic
Kinematics[,94] <- Kinematics[,94] - LeftKneeStatic
Kinematics[,140] <- Kinematics[,140] - RightKneeStatic
Kinematics[,186] <- Kinematics[,186] - LeftKneeStatic
Kinematics[,232] <- Kinematics[,232] - RightKneeStatic
Kinematics[,278] <- Kinematics[,278] - LeftKneeStatic
Kinematics[,324] <- Kinematics[,324] - RightKneeStatic
Kinematics_LS1 <-  Kinematics[,1:47]
Kinematics_RS1 <-  Kinematics[,c(1,48:93)]
Kinematics_LS2 <-  Kinematics[,c(1,94:139)]
Kinematics_RS2 <-  Kinematics[,c(1,140:185)]
Kinematics_LS3 <-  Kinematics[,c(1,186:231)]
Kinematics_RS3 <-  Kinematics[,c(1,232:277)]
Kinematics_LS4 <-  Kinematics[,c(1,278:323)]
Kinematics_RS4 <-  Kinematics[,c(1,324:369)]
Kinematics_LS1b <-  as.matrix(Kinematics_LS1)
Kinematics_LS2b <-  as.matrix(Kinematics_LS2)
Kinematics_LS3b <-  as.matrix(Kinematics_LS3)
Kinematics_LS4b <-  as.matrix(Kinematics_LS4)
Kinematics_RS1b <-  as.matrix(Kinematics_RS1)
Kinematics_RS2b <-  as.matrix(Kinematics_RS2)
Kinematics_RS3b <-  as.matrix(Kinematics_RS3)
Kinematics_RS4b <-  as.matrix(Kinematics_RS4)
Kinematic_colnames <- colnames(Kinematics_LS1)
X <- list(Kinematics_LS1b, Kinematics_LS2b, Kinematics_LS3b, Kinematics_LS4b)
Y <- do.call(cbind, X)
Y <- array(Y, dim=c(dim(X[[1]]), length(X)))
Kinematics_Left_mean <-  as.data.frame(apply(Y, c(1, 2), mean, na.rm = TRUE))
colnames(Kinematics_Left_mean) <-  Kinematic_colnames
X <- list(Kinematics_RS1b, Kinematics_RS2b, Kinematics_RS3b, Kinematics_RS4b)
Y <- do.call(cbind, X)
Y <- array(Y, dim=c(dim(X[[1]]), length(X)))
Kinematics_Right_mean <-  as.data.frame(apply(Y, c(1, 2), mean, na.rm = TRUE))
colnames(Kinematics_Right_mean) <-  Kinematic_colnames
Kinematics_Diff <- Kinematics_Left_mean - Kinematics_Right_mean
Kinematics_Diff[,"Time"] <- Kinematics_Left_mean[,"Time"]
Kinematics_LS1 <- column_to_rownames(Kinematics_LS1, "Time")
Kinematics_LS1 <-  data.frame(t(Kinematics_LS1))
Kinematics_LS1 <-  rownames_to_column(Kinematics_LS1)
Kinematics_LS1 <-  cbind(Trial = "LS1", Kinematics_LS1)
Kinematics_RS1 <- column_to_rownames(Kinematics_RS1, "Time")
Kinematics_RS1 <-  data.frame(t(Kinematics_RS1))
Kinematics_RS1 <-  rownames_to_column(Kinematics_RS1)
Kinematics_RS1 <-  cbind(Trial = "RS1", Kinematics_RS1)
Kinematics_LS2 <- column_to_rownames(Kinematics_LS2, "Time")
Kinematics_LS2 <-  data.frame(t(Kinematics_LS2))
Kinematics_LS2 <-  rownames_to_column(Kinematics_LS2)
Kinematics_LS2 <-  cbind(Trial = "LS2", Kinematics_LS2)
Kinematics_RS2 <- column_to_rownames(Kinematics_RS2, "Time")
Kinematics_RS2 <-  data.frame(t(Kinematics_RS2))
Kinematics_RS2 <-  rownames_to_column(Kinematics_RS2)
Kinematics_RS2 <-  cbind(Trial = "RS2", Kinematics_RS2)
Kinematics_LS3 <- column_to_rownames(Kinematics_LS3, "Time")
Kinematics_LS3 <-  data.frame(t(Kinematics_LS3))
Kinematics_LS3 <-  rownames_to_column(Kinematics_LS3)
Kinematics_LS3 <-  cbind(Trial = "LS3", Kinematics_LS3)
Kinematics_RS3 <- column_to_rownames(Kinematics_RS3, "Time")
Kinematics_RS3 <-  data.frame(t(Kinematics_RS3))
Kinematics_RS3 <-  rownames_to_column(Kinematics_RS3)
Kinematics_RS3 <-  cbind(Trial = "RS3", Kinematics_RS3)
Kinematics_LS4 <- column_to_rownames(Kinematics_LS4, "Time")
Kinematics_LS4 <-  data.frame(t(Kinematics_LS4))
Kinematics_LS4 <-  rownames_to_column(Kinematics_LS4)
Kinematics_LS4 <-  cbind(Trial = "LS4", Kinematics_LS4)
Kinematics_RS4 <- column_to_rownames(Kinematics_RS4, "Time")
Kinematics_RS4 <-  data.frame(t(Kinematics_RS4))
Kinematics_RS4 <-  rownames_to_column(Kinematics_RS4)
Kinematics_RS4 <-  cbind(Trial = "RS4", Kinematics_RS4)
Kinematics_Left_mean <- column_to_rownames(Kinematics_Left_mean, "Time")
Kinematics_Left_mean <-  data.frame(t(Kinematics_Left_mean))
Kinematics_Left_mean <-  rownames_to_column(Kinematics_Left_mean)
Kinematics_Left_mean <-  cbind(Trial = "LSmean", Kinematics_Left_mean)
Kinematics_Right_mean <- column_to_rownames(Kinematics_Right_mean, "Time")
Kinematics_Right_mean <-  data.frame(t(Kinematics_Right_mean))
Kinematics_Right_mean <-  rownames_to_column(Kinematics_Right_mean)
Kinematics_Right_mean <-  cbind(Trial = "RSmean", Kinematics_Right_mean)
Kinematics_Diff <- column_to_rownames(Kinematics_Diff, "Time")
Kinematics_Diff <-  data.frame(t(Kinematics_Diff))
Kinematics_Diff <-  rownames_to_column(Kinematics_Diff)
Kinematics_Diff <-  cbind(Trial = "Diff", Kinematics_Diff)
Kinematics_All <- bind_rows(Kinematics_LS1, Kinematics_RS1, Kinematics_LS2, Kinematics_RS2, Kinematics_LS3, Kinematics_RS3,
Kinematics_LS4, Kinematics_RS4, Kinematics_Left_mean, Kinematics_Right_mean, Kinematics_Diff)
Kinematics_All <-  data.frame(dataname1, labels1,Kinematics_All)
### PADDLE ###
Paddle <-  data.frame(t(Paddle))
Paddle <-  rownames_to_column(Paddle)
Paddle_All <- data.frame(dataname1, labels1,Paddle)
#TIME MARKERS ###
TimeMarkers_All <- data.frame(dataname1, labels1,TimeMarkers)
CombinedKinematics_All[[i]] = Kinematics_All
CombinedPaddle_All[[i]] = Paddle_All
CombinedTimeMarkers_All[[i]] = TimeMarkers_All
}
CombinedKinematics_All <-  rbindlist(CombinedKinematics_All, fill=TRUE)
CombinedPaddle_All <-  rbindlist(CombinedPaddle_All, fill=TRUE)
CombinedTimeMarkers_All <-  rbindlist(CombinedTimeMarkers_All, fill=TRUE)
View(CombinedPaddle_All)
CombinedPaddle_All <-  CombinedPaddle_All %>%
dplyr::rename(
Dataname = dataname1,
Name = V1,
Speed = V2,
Date = V3,
Paddle = rowname
)
CombinedTimeMarkers_All <-  CombinedTimeMarkers_All %>%
dplyr::rename(
Dataname = dataname1,
Name = V1,
Speed = V2,
Date = V3,
)
ColumnsKinematics = c("Dataname", "Name","Speed", "Date", "Trial", "Kinematic", 0:100)
colnames(CombinedKinematics_All) <-  ColumnsKinematics
View(CombinedPaddle_All)
Test <- CombinedPaddle_All %>%
filter(Name == input$Name) %>%
filter(Date == input$Date) %>%
filter(Speed == input$Speed)
Test <- CombinedPaddle_All %>%
filter(Name == "Jaime") %>%
filter(Date == "20122019") %>%
filter(Speed == "90spm")
View(Test)
colnames(Test) <- c("Dataname", "Name", "Speed", "Date", "Paddle", 1:(ncol(Test)-5))
Test <- Test %>% select(-(1:4)) %>%
tibble::column_to_rownames("Paddle")
Test <-  as.data.frame(t(Test))
plotdata = Test
#plotdata_Benchmark =  Benchmark_filtered() %>% filter(Kinematic ==kinematic1)
ggplot() +
geom_path(data = plotdata, aes(x =Lwristlatdrift, y =  Lwristvertdrift, colour = "Left"))  +
geom_path(data = plotdata, aes( x =Rwristlatdrift , y = Rwristvertdrift, colour ="Right")) +
scale_color_manual(name = "Side", values=Line_Colours_vel) +
# scale_linetype_manual(values = Line_Types) + scale_color_manual(values=Line_Colours) + scale_size_manual(values = Line_Size) +
# ggtitle(paddle1)+ xlab(xlabel) + theme(plot.title = element_text(hjust = 0.5))#+
# geom_vline(xintercept=EndPCLeft, colour = 'green4') + geom_vline(xintercept=EndPCRight, colour = 'red')+
# geom_text(aes(x=EndPCLeft, y = yheight1,label="Exit"),hjust=1,vjust=1, size=3, colour = 'green4') +
# geom_vline(xintercept=CatchPCLeft, colour = 'green4') + geom_vline(xintercept=CatchPCRight, colour = 'red')+
annotate(geom = "label",x=0, y = 0,label="HEAD", size=6)#+ geom_circle(aes(x0 =0,y0 =0,r=50))
############ GGPLOTS #############################
#### Definitions ####
Line_Colours = c("green4", "green4","green4","green4", "red", "red", "red", "red")
Line_Types = c("solid", "solid", "solid", "solid", "solid", "solid", "solid", "solid")
Line_Size = c(1, 1, 1, 1, 1, 1, 1, 1, 1)
# For 2 sessions #
Line_Colours_vel = c("green4","red")
Line_Types_vel = c("solid","solid")
Line_Size_vel = c(1, 1)
# ggplot loop #
xlabel <- "% stroke"
#plotdata_Benchmark =  Benchmark_filtered() %>% filter(Kinematic ==kinematic1)
ggplot() +
geom_path(data = plotdata, aes(x =Lwristlatdrift, y =  Lwristvertdrift, colour = "Left"))  +
geom_path(data = plotdata, aes( x =Rwristlatdrift , y = Rwristvertdrift, colour ="Right")) +
scale_color_manual(name = "Side", values=Line_Colours_vel) +
# scale_linetype_manual(values = Line_Types) + scale_color_manual(values=Line_Colours) + scale_size_manual(values = Line_Size) +
# ggtitle(paddle1)+ xlab(xlabel) + theme(plot.title = element_text(hjust = 0.5))#+
# geom_vline(xintercept=EndPCLeft, colour = 'green4') + geom_vline(xintercept=EndPCRight, colour = 'red')+
# geom_text(aes(x=EndPCLeft, y = yheight1,label="Exit"),hjust=1,vjust=1, size=3, colour = 'green4') +
# geom_vline(xintercept=CatchPCLeft, colour = 'green4') + geom_vline(xintercept=CatchPCRight, colour = 'red')+
annotate(geom = "label",x=0, y = 0,label="HEAD", size=6)#+ geom_circle(aes(x0 =0,y0 =0,r=50))
Test2 <- CombinedPaddle_All %>%
filter(Name == "Jaime") %>%
filter(Date == "20122019") %>%
filter(Speed == "100spm")
colnames(Test) <- c("Dataname", "Name", "Speed", "Date", "Paddle", 1:(ncol(Test)-5))
Test2 <- Test2 %>% select(-(1:4)) %>%
tibble::column_to_rownames("Paddle")
Test2 <-  as.data.frame(t(Test2))
plotdata2 = Test2
#plotdata_Benchmark =  Benchmark_filtered() %>% filter(Kinematic ==kinematic1)
ggplot() +
geom_path(data = plotdata, aes(x =Lwristlatdrift, y =  Lwristvertdrift, colour = "Left"))  +
geom_path(data = plotdata, aes( x =Rwristlatdrift , y = Rwristvertdrift, colour ="Right")) +
geom_path(data = plotdata2, aes(x =Lwristlatdrift, y =  Lwristvertdrift, colour = "Left2"))  +
geom_path(data = plotdata2, aes( x =Rwristlatdrift , y = Rwristvertdrift, colour ="Right2")) +
scale_color_manual(name = "Side", values=Line_Colours_vel) +
# scale_linetype_manual(values = Line_Types) + scale_color_manual(values=Line_Colours) + scale_size_manual(values = Line_Size) +
# ggtitle(paddle1)+ xlab(xlabel) + theme(plot.title = element_text(hjust = 0.5))#+
# geom_vline(xintercept=EndPCLeft, colour = 'green4') + geom_vline(xintercept=EndPCRight, colour = 'red')+
# geom_text(aes(x=EndPCLeft, y = yheight1,label="Exit"),hjust=1,vjust=1, size=3, colour = 'green4') +
# geom_vline(xintercept=CatchPCLeft, colour = 'green4') + geom_vline(xintercept=CatchPCRight, colour = 'red')+
annotate(geom = "label",x=0, y = 0,label="HEAD", size=6)#+ geom_circle(aes(x0 =0,y0 =0,r=50))
#plotdata_Benchmark =  Benchmark_filtered() %>% filter(Kinematic ==kinematic1)
ggplot() +
geom_path(data = plotdata, aes(x =Lwristlatdrift, y =  Lwristvertdrift, colour = "Left"))  +
geom_path(data = plotdata, aes( x =Rwristlatdrift , y = Rwristvertdrift, colour ="Right")) +
geom_path(data = plotdata2, aes(x =Lwristlatdrift, y =  Lwristvertdrift, colour = "Left2"))  +
geom_path(data = plotdata2, aes( x =Rwristlatdrift , y = Rwristvertdrift, colour ="Right2")) +
#scale_color_manual(name = "Side", values=Line_Colours_vel) +
# scale_linetype_manual(values = Line_Types) + scale_color_manual(values=Line_Colours) + scale_size_manual(values = Line_Size) +
# ggtitle(paddle1)+ xlab(xlabel) + theme(plot.title = element_text(hjust = 0.5))#+
# geom_vline(xintercept=EndPCLeft, colour = 'green4') + geom_vline(xintercept=EndPCRight, colour = 'red')+
# geom_text(aes(x=EndPCLeft, y = yheight1,label="Exit"),hjust=1,vjust=1, size=3, colour = 'green4') +
# geom_vline(xintercept=CatchPCLeft, colour = 'green4') + geom_vline(xintercept=CatchPCRight, colour = 'red')+
annotate(geom = "label",x=0, y = 0,label="HEAD", size=6)#+ geom_circle(aes(x0 =0,y0 =0,r=50))
Line_Colours_vel2 = c("green4","green", "red", "orange")
#plotdata_Benchmark =  Benchmark_filtered() %>% filter(Kinematic ==kinematic1)
ggplot() +
geom_path(data = plotdata, aes(x =Lwristlatdrift, y =  Lwristvertdrift, colour = "Left"))  +
geom_path(data = plotdata, aes( x =Rwristlatdrift , y = Rwristvertdrift, colour ="Right")) +
geom_path(data = plotdata2, aes(x =Lwristlatdrift, y =  Lwristvertdrift, colour = "Left2"))  +
geom_path(data = plotdata2, aes( x =Rwristlatdrift , y = Rwristvertdrift, colour ="Right2")) +
scale_color_manual(name = "Side", values=Line_Colours_vel2) +
# scale_linetype_manual(values = Line_Types) + scale_color_manual(values=Line_Colours) + scale_size_manual(values = Line_Size) +
# ggtitle(paddle1)+ xlab(xlabel) + theme(plot.title = element_text(hjust = 0.5))#+
# geom_vline(xintercept=EndPCLeft, colour = 'green4') + geom_vline(xintercept=EndPCRight, colour = 'red')+
# geom_text(aes(x=EndPCLeft, y = yheight1,label="Exit"),hjust=1,vjust=1, size=3, colour = 'green4') +
# geom_vline(xintercept=CatchPCLeft, colour = 'green4') + geom_vline(xintercept=CatchPCRight, colour = 'red')+
annotate(geom = "label",x=0, y = 0,label="HEAD", size=6)#+ geom_circle(aes(x0 =0,y0 =0,r=50))
tab_Filtered_S1_Kin <-
CombinedKinematics_All %>%
filter(Name == "Jaime") %>%
filter(Date == "20122019") %>%
filter(Speed == "90spm") %>%
reshape2::melt(id = c("Dataname", "Name", "Speed", "Date", "Trial", "Kinematic")) %>%
mutate(variable = as.numeric(as.character(variable)))
tab_Filtered_S2_Kin <-
CombinedKinematics_All %>%
filter(Name == "Jaime") %>%
filter(Date == "20122019") %>%
filter(Speed == "100spm") %>%
reshape2::melt(id = c("Dataname", "Name", "Speed", "Date", "Trial", "Kinematic")) %>%
mutate(variable = as.numeric(as.character(variable)))
plotdata_S1 <- tab_Filtered_S1_Kin %>% filter(Trial %in% c("Kinematics_Left_mean", "Kinematics_Right_mean"))%>%  mutate(Session = paste("Session 1", Date, Trial))
View(tab_Filtered_S1_Kin)
plotdata_S1 <- tab_Filtered_S1_Kin %>% filter(Trial %in% c("LSmean", "RSmean"))%>%  mutate(Session = paste("Session 1", Date, Trial))
plotdata_S2 <- tab_Filtered_S2_Kin %>% filter(Trial %in% c("LSmean", "RSmean"))%>%  mutate(Session = paste("Session 2", Date, Trial))
plotdata2 <-  bind_rows(plotdata_S1, plotdata_S2)
View(plotdata2)
EndPCLeft <-  data.frame(EndPCLeft())
View(plotdata2)
#EndPCLeft <- reactive({
EndPCLeft <-  tab_Filtered_S1_Time %>% select(variable, value)
tab_Filtered_S1_Kin <-  #reactive({
CombinedKinematics_All %>%
filter(Name == "Jaime") %>%
filter(Date == "20122019") %>%
filter(Speed == "90spm") %>%
reshape2::melt(id = c("Dataname", "Name", "Speed", "Date", "Trial", "Kinematic")) %>%
mutate(variable = as.numeric(as.character(variable)))
### Time points ###
tab_Filtered_S1_Time <-  #reactive({
CombinedTimeMarkers_All %>%
filter(Name == "Jaime") %>%
filter(Date == "20122019") %>%
filter(Speed == "90spm") %>%
reshape2::melt(id = c("Dataname", "Name", "Speed", "Date"))
tab_Filtered_S1_Pad <-  #reactive({
Test <- CombinedPaddle_All %>%
filter(Name == input$Name) %>%
filter(Name == "Jaime") %>%
filter(Date == "20122019") %>%
filter(Speed == "90spm")
Test <- CombinedPaddle_All %>%
filter(Name == "Jaime") %>%
filter(Date == "20122019") %>%
filter(Speed == "90spm")
colnames(Test) <- c("Dataname", "Name", "Speed", "Date", "Paddle", 1:(ncol(Test)-5))
Test <- Test %>% select(-(1:4)) %>%
tibble::column_to_rownames("Paddle")
Test <-  as.data.frame(t(Test))
tab_Filtered_S1_Pad <- Test
tab_Filtered_S2_Kin <-  #reactive({
CombinedKinematics_All %>%
filter(Name == "Jaime") %>%
filter(Date == "20122019") %>%
filter(Speed == "100spm") %>%
reshape2::melt(id = c("Dataname", "Name", "Speed", "Date", "Trial", "Kinematic")) %>%
mutate(variable = as.numeric(as.character(variable)))
### Time points ###
tab_Filtered_S2_Time <-  #reactive({
CombinedTimeMarkers_All %>%
filter(Name == "Jaime") %>%
filter(Date == "20122019") %>%
filter(Speed == "100spm") %>%
reshape2::melt(id = c("Dataname", "Name", "Speed", "Date"))
Test <- CombinedPaddle_All %>%
filter(Name == "Jaime") %>%
filter(Date == "20122019") %>%
filter(Speed == "100spm")
colnames(Test) <- c("Dataname", "Name", "Speed", "Date", "Paddle", 1:(ncol(Test)-5))
Test <- Test %>% select(-(1:4)) %>%
tibble::column_to_rownames("Paddle")
Test <-  as.data.frame(t(Test))
tab_Filtered_S2_Pad <-  Test
plotdata_S1 <- tab_Filtered_S1_Kin %>% filter(Trial %in% c("LSmean", "RSmean"))%>%  mutate(Session = paste("Session 1", Date, Trial))
plotdata_S2 <- tab_Filtered_S2_Kin %>% filter(Trial %in% c("LSmean", "RSmean"))%>%  mutate(Session = paste("Session 2", Date, Trial))
plotdata2 <-  bind_rows(plotdata_S1, plotdata_S2)
############ GGPLOTS #############################
#### Definitions ####
Line_Colours = c("green4", "green4","green4","green4", "red", "red", "red", "red")
Line_Types = c("solid", "solid", "solid", "solid", "solid", "solid", "solid", "solid")
Line_Size = c(1, 1, 1, 1, 1, 1, 1, 1, 1)
Line_Colours2 = c("green4", "green4","green4","green4", "red", "red", "red", "red")
Line_Types2 = c("solid", "solid", "solid", "solid", "solid", "solid", "solid", "solid")
Line_Size2 = c(1, 1, 1, 1, 1, 1, 1, 1, 1)
# For 2 sessions #
Line_Colours_vel = c("green4","red")
Line_Types_vel = c("solid","solid")
Line_Size_vel = c(1, 1)
Line_Colours_vel2 = c("green4","green", "red", "orange")
Line_Types_vel2 = c("solid","solid")
Line_Size_vel2 = c(1, 1)
# ggplot loop #
xlabel <- "% stroke"
#EndPCLeft <- reactive({
EndPCLeft <-  tab_Filtered_S1_Time %>% select(variable, value)
EndPCLeft <- EndPCLeft %>% filter(variable == "LeftEndPCavg")
#return(EndPCLeft)
#})
#EndPCRight <- reactive({
EndPCRight <-  tab_Filtered_S1_Time %>% select(variable, value)
EndPCRight <- EndPCRight %>% filter(variable == "RightEndPCavg")
#
#CatchPCLeft <- reactive({
CatchPCLeft <-  tab_Filtered_S1_Time %>% select(variable,value)
CatchPCLeft <- CatchPCLeft %>% filter(variable == "LeftCatchPCavg")
#CatchPCRight <- reactive({
CatchPCRight <-  tab_Filtered_S1_Time %>% select(variable,value)
CatchPCRight <- CatchPCRight %>% filter(variable == "RightCatchPCavg")
#EndPCLeft2 <- reactive({
EndPCLeft2 <-  tab_Filtered_S2_Time %>% select(variable, value)
EndPCLeft2 <- EndPCLeft2 %>% filter(variable == "LeftEndPCavg")
#  return(EndPCLeft2)
#})
#EndPCRight2 <- reactive({
EndPCRight2 <-  tab_Filtered_S2_Time %>% select(variable, value)
EndPCRight2 <- EndPCRight2 %>% filter(variable == "RightEndPCavg")
#  return(EndPCRight2)
#})
#CatchPCLeft2 <- reactive({
CatchPCLeft2 <-  tab_Filtered_S2_Time %>% select(variable,value)
CatchPCLeft2 <- CatchPCLeft2 %>% filter(variable == "LeftCatchPCavg")
#CatchPCRight2 <- reactive({
CatchPCRight2 <-  tab_Filtered_S2_Time %>% select(variable,value)
CatchPCRight2 <- CatchPCRight2 %>% filter(variable == "RightCatchPCavg")
plotdata = tab_Filtered_S1_Pad
#plotdata_Benchmark =  Benchmark_filtered() %>% filter(Kinematic ==kinematic1)
ggplot(data = plotdata) +
geom_path(aes(x =Lwristlatdrift, y =  Lwristvertdrift, colour = "Left"))  +
geom_path(aes( x =Rwristlatdrift , y = Rwristvertdrift, colour ="Right")) +
scale_color_manual(name = "Side", values=Line_Colours_vel) +
# scale_linetype_manual(values = Line_Types) + scale_color_manual(values=Line_Colours) + scale_size_manual(values = Line_Size) +
# ggtitle(paddle1)+ xlab(xlabel) + theme(plot.title = element_text(hjust = 0.5))#+
# geom_vline(xintercept=EndPCLeft, colour = 'green4') + geom_vline(xintercept=EndPCRight, colour = 'red')+
# geom_text(aes(x=EndPCLeft, y = yheight1,label="Exit"),hjust=1,vjust=1, size=3, colour = 'green4') +
# geom_vline(xintercept=CatchPCLeft, colour = 'green4') + geom_vline(xintercept=CatchPCRight, colour = 'red')+
annotate(geom = "label",x=0, y = 0,label="HEAD", size=6)#+ geom_circle(aes(x0 =0,y0 =0,r=50))
plotdataPad = tab_Filtered_S1_Pad
plotdataPad2 = tab_Filtered_S2_Pad
#plotdata_Benchmark =  Benchmark_filtered() %>% filter(Kinematic ==kinematic1)
ggplot() +
geom_path(data = plotdatapad, aes(x =Lwristlatdrift, y =  Lwristvertdrift, colour = "Left"))  +
geom_path(data = plotdatapad, aes( x =Rwristlatdrift , y = Rwristvertdrift, colour ="Right")) +
geom_path(data = plotdatapad2, aes(x =Lwristlatdrift, y =  Lwristvertdrift, colour = "Left2"))  +
geom_path(data = plotdatapad2, aes( x =Rwristlatdrift , y = Rwristvertdrift, colour ="Right2")) +
scale_color_manual(name = "Side", values=Line_Colours_vel2) +
# scale_linetype_manual(values = Line_Types) + scale_color_manual(values=Line_Colours) + scale_size_manual(values = Line_Size) +
# ggtitle(paddle1)+ xlab(xlabel) + theme(plot.title = element_text(hjust = 0.5))#+
# geom_vline(xintercept=EndPCLeft, colour = 'green4') + geom_vline(xintercept=EndPCRight, colour = 'red')+
# geom_text(aes(x=EndPCLeft, y = yheight1,label="Exit"),hjust=1,vjust=1, size=3, colour = 'green4') +
# geom_vline(xintercept=CatchPCLeft, colour = 'green4') + geom_vline(xintercept=CatchPCRight, colour = 'red')+
annotate(geom = "label",x=0, y = 0,label="HEAD", size=6)#+ geom_circle(aes(x0 =0,y0 =0,r=50))
#plotdata_Benchmark =  Benchmark_filtered() %>% filter(Kinematic ==kinematic1)
ggplot() +
geom_path(data = plotdataPad, aes(x =Lwristlatdrift, y =  Lwristvertdrift, colour = "Left"))  +
geom_path(data = plotdataPad, aes( x =Rwristlatdrift , y = Rwristvertdrift, colour ="Right")) +
geom_path(data = plotdataPad2, aes(x =Lwristlatdrift, y =  Lwristvertdrift, colour = "Left2"))  +
geom_path(data = plotdataPad2, aes( x =Rwristlatdrift , y = Rwristvertdrift, colour ="Right2")) +
scale_color_manual(name = "Side", values=Line_Colours_vel2) +
# scale_linetype_manual(values = Line_Types) + scale_color_manual(values=Line_Colours) + scale_size_manual(values = Line_Size) +
# ggtitle(paddle1)+ xlab(xlabel) + theme(plot.title = element_text(hjust = 0.5))#+
# geom_vline(xintercept=EndPCLeft, colour = 'green4') + geom_vline(xintercept=EndPCRight, colour = 'red')+
# geom_text(aes(x=EndPCLeft, y = yheight1,label="Exit"),hjust=1,vjust=1, size=3, colour = 'green4') +
# geom_vline(xintercept=CatchPCLeft, colour = 'green4') + geom_vline(xintercept=CatchPCRight, colour = 'red')+
annotate(geom = "label",x=0, y = 0,label="HEAD", size=6)#+ geom_circle(aes(x0 =0,y0 =0,r=50))
#ggplot_base <- function(kinematic1, yheight1) {
#renderPlot({
#if (input$Report_Type == "Single Session"){
#EndPCLeft <-  data.frame(EndPCLeft())
EndPCLeft <-  EndPCLeft[1,2]
#EndPCRight <-  data.frame(EndPCRight())
EndPCRight <-  EndPCRight[1,2]
#CatchPCLeft <-  data.frame(CatchPCLeft())
CatchPCLeft <-  CatchPCLeft[1,2]
#CatchPCRight <-  data.frame(CatchPCRight())
CatchPCRight <-  CatchPCRight[1,2]
plotdata = tab_Filtered_S1_Kin %>% filter(Kinematic ==kinematic1) %>% filter(Trial %in% c("LS1", "LS2", "LS3", "LS4", "RS1", "RS2", "RS3", "RS4"))
#plotdata_Benchmark =  Benchmark_filtered() %>% filter(Kinematic ==kinematic1)
ggplot() + geom_line(data = plotdata, aes(variable, value, colour = Trial, linetype = Trial, size =Trial)) +
scale_linetype_manual(values = Line_Types) + scale_color_manual(values=Line_Colours) + scale_size_manual(values = Line_Size) +
ggtitle(kinematic1)+ xlab(xlabel) +ylab("Angle (degrees)") + theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=EndPCLeft, colour = 'green4') + geom_vline(xintercept=EndPCRight, colour = 'red')+
annotate(geom = "label", x=EndPCLeft, y = yheight1,label="Exit",hjust=1,vjust=1, size=3, colour = 'green4') +
geom_vline(xintercept=CatchPCLeft, colour = 'green4') + geom_vline(xintercept=CatchPCRight, colour = 'red')+
annotate(geom = "label", x=CatchPCLeft, y = yheight1,label="Opp Catch",hjust=1,vjust=1, size=3, colour = 'green4')
kinematic1="KneeAngle"
plotdata = tab_Filtered_S1_Kin %>% filter(Kinematic ==kinematic1) %>% filter(Trial %in% c("LS1", "LS2", "LS3", "LS4", "RS1", "RS2", "RS3", "RS4"))
#plotdata_Benchmark =  Benchmark_filtered() %>% filter(Kinematic ==kinematic1)
ggplot() + geom_line(data = plotdata, aes(variable, value, colour = Trial, linetype = Trial, size =Trial)) +
scale_linetype_manual(values = Line_Types) + scale_color_manual(values=Line_Colours) + scale_size_manual(values = Line_Size) +
ggtitle(kinematic1)+ xlab(xlabel) +ylab("Angle (degrees)") + theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=EndPCLeft, colour = 'green4') + geom_vline(xintercept=EndPCRight, colour = 'red')+
annotate(geom = "label", x=EndPCLeft, y = yheight1,label="Exit",hjust=1,vjust=1, size=3, colour = 'green4') +
geom_vline(xintercept=CatchPCLeft, colour = 'green4') + geom_vline(xintercept=CatchPCRight, colour = 'red')+
annotate(geom = "label", x=CatchPCLeft, y = yheight1,label="Opp Catch",hjust=1,vjust=1, size=3, colour = 'green4')
yheight1 = Inf
plotdata = tab_Filtered_S1_Kin %>% filter(Kinematic ==kinematic1) %>% filter(Trial %in% c("LS1", "LS2", "LS3", "LS4", "RS1", "RS2", "RS3", "RS4"))
#plotdata_Benchmark =  Benchmark_filtered() %>% filter(Kinematic ==kinematic1)
ggplot() + geom_line(data = plotdata, aes(variable, value, colour = Trial, linetype = Trial, size =Trial)) +
scale_linetype_manual(values = Line_Types) + scale_color_manual(values=Line_Colours) + scale_size_manual(values = Line_Size) +
ggtitle(kinematic1)+ xlab(xlabel) +ylab("Angle (degrees)") + theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=EndPCLeft, colour = 'green4') + geom_vline(xintercept=EndPCRight, colour = 'red')+
annotate(geom = "label", x=EndPCLeft, y = yheight1,label="Exit",hjust=1,vjust=1, size=3, colour = 'green4') +
geom_vline(xintercept=CatchPCLeft, colour = 'green4') + geom_vline(xintercept=CatchPCRight, colour = 'red')+
annotate(geom = "label", x=CatchPCLeft, y = yheight1,label="Opp Catch",hjust=1,vjust=1, size=3, colour = 'green4')
#EndPCLeft2 <-  data.frame(EndPCLeft2())
EndPCLeft2 <-  EndPCLeft2[1,2]
#EndPCRight2 <-  data.frame(EndPCRight2())
EndPCRight2 <-  EndPCRight2[1,2]
#CatchPCLeft2 <-  data.frame(CatchPCLeft2())
CatchPCLeft2 <-  CatchPCLeft2[1,2]
#CatchPCRight2 <-  data.frame(CatchPCRight2())
CatchPCRight2 <-  CatchPCRight2[1,2]
plotdata = plotdata2 %>% filter(Kinematic ==kinematic1)
View(plotdata)
plotdata = plotdata2() %>% filter(Kinematic ==kinematic1)
#plotdata_Benchmark =  Benchmark_filtered() %>% filter(Kinematic ==kinematic1)
ggplot() + geom_line(data = plotdata, aes(variable, value, colour = Session, linetype = Session, size =Session)) +
scale_linetype_manual(values = Line_Types2) + scale_color_manual(values=Line_Colours2) + scale_size_manual(values = Line_Size2) +
ggtitle(kinematic1)+ xlab(xlabel) +ylab("Angle (degrees)") + theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=EndPCLeft, colour = 'green4') + geom_vline(xintercept=EndPCRight, colour = 'red')+
annotate(geom = "label", x=EndPCLeft, y = yheight1,label="Exit",hjust=1,vjust=1, size=3, colour = 'green4') +
geom_vline(xintercept=CatchPCLeft2, colour = 'green4') + geom_vline(xintercept=CatchPCRight2, colour = 'red')+
annotate(geom = "label", x=CatchPCLeft2, y = yheight1,label="Opp Catch",hjust=1,vjust=1, size=3, colour = 'green4')+
geom_vline(xintercept=EndPCLeft2, colour = 'green4') + geom_vline(xintercept=EndPCRight2, colour = 'red')+
annotate(geom = "label", x=EndPCLeft2, y = yheight1,label="Exit",hjust=1,vjust=1, size=3, colour = 'green4')
Line_Colours2 = c("green4", "red","green","orange")
Line_Types2 = c("solid", "solid", "solid", "solid")
Line_Size2 = c(1, 1, 1, 1)
#plotdata_Benchmark =  Benchmark_filtered() %>% filter(Kinematic ==kinematic1)
ggplot() + geom_line(data = plotdata, aes(variable, value, colour = Session, linetype = Session, size =Session)) +
scale_linetype_manual(values = Line_Types2) + scale_color_manual(values=Line_Colours2) + scale_size_manual(values = Line_Size2) +
ggtitle(kinematic1)+ xlab(xlabel) +ylab("Angle (degrees)") + theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=EndPCLeft, colour = 'green4') + geom_vline(xintercept=EndPCRight, colour = 'red')+
annotate(geom = "label", x=EndPCLeft, y = yheight1,label="Exit",hjust=1,vjust=1, size=3, colour = 'green4') +
geom_vline(xintercept=CatchPCLeft2, colour = 'green4') + geom_vline(xintercept=CatchPCRight2, colour = 'red')+
annotate(geom = "label", x=CatchPCLeft2, y = yheight1,label="Opp Catch",hjust=1,vjust=1, size=3, colour = 'green4')+
geom_vline(xintercept=EndPCLeft2, colour = 'green4') + geom_vline(xintercept=EndPCRight2, colour = 'red')+
annotate(geom = "label", x=EndPCLeft2, y = yheight1,label="Exit",hjust=1,vjust=1, size=3, colour = 'green4')
#plotdata_Benchmark =  Benchmark_filtered() %>% filter(Kinematic ==kinematic1)
ggplot() + geom_line(data = plotdata, aes(variable, value, colour = Session, linetype = Session, size =Session)) +
scale_linetype_manual(values = Line_Types2) + scale_color_manual(values=Line_Colours2) + scale_size_manual(values = Line_Size2) +
ggtitle(kinematic1)+ xlab(xlabel) +ylab("Angle (degrees)") + theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=EndPCLeft, colour = 'green4') + geom_vline(xintercept=EndPCRight, colour = 'red')+
annotate(geom = "label", x=EndPCLeft, y = yheight1,label="Exit",hjust=1,vjust=1, size=3, colour = 'green4') +
geom_vline(xintercept=CatchPCLeft2, colour = 'green') + geom_vline(xintercept=CatchPCRight2, colour = 'orange')+
annotate(geom = "label", x=CatchPCLeft2, y = yheight1,label="Opp Catch",hjust=1,vjust=1, size=3, colour = 'green')+
geom_vline(xintercept=EndPCLeft2, colour = 'green') + geom_vline(xintercept=EndPCRight2, colour = 'orange')+
annotate(geom = "label", x=EndPCLeft2, y = yheight1,label="Exit",hjust=1,vjust=1, size=3, colour = 'green')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
